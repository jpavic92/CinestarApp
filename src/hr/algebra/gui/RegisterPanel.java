/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.gui;

import com.sun.glass.events.KeyEvent;
import hr.algebra.utils.MessageUtils;
import hr.cinestar.dal.Repository;
import hr.cinestar.dal.RepositoryFactory;
import hr.cinestar.model.User;
import hr.cinestar.model.UserRole;
import java.awt.Color;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Josip
 */
public class RegisterPanel extends javax.swing.JPanel {
    
    private Repository repo;
    
    private List<JTextField> validationFields;
    private List<JLabel> errorLabels;
    private final LoginForm parent;
    

    /**
     * Creates new form SignInPanel
     * @param parent
     */
    public RegisterPanel(JFrame parent) {
        initComponents();
        this.parent = (LoginForm)parent;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bntRegister = new javax.swing.JButton();
        lblSingIn = new javax.swing.JLabel();
        lblUsernameError = new javax.swing.JLabel();
        lblPasswordError = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        lblPasswordReError = new javax.swing.JLabel();
        pfPasswordRe = new javax.swing.JPasswordField();

        setPreferredSize(new java.awt.Dimension(630, 420));

        jLabel1.setText("Username:");

        tfUsername.setName("username"); // NOI18N
        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterPanel.this.keyReleased(evt);
            }
        });

        jLabel2.setText("Password:");

        bntRegister.setText("Register");
        bntRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntRegisterActionPerformed(evt);
            }
        });

        lblSingIn.setForeground(new java.awt.Color(0, 0, 255));
        lblSingIn.setText("Sign in");
        lblSingIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSingInMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSingInMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblSingInMouseReleased(evt);
            }
        });

        lblUsernameError.setForeground(new java.awt.Color(255, 0, 0));

        lblPasswordError.setForeground(new java.awt.Color(255, 0, 0));

        pfPassword.setName("password"); // NOI18N
        pfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterPanel.this.keyReleased(evt);
            }
        });

        jLabel3.setText("Retype password:");

        lblPasswordReError.setForeground(new java.awt.Color(255, 0, 0));

        pfPasswordRe.setName("passwordRe"); // NOI18N
        pfPasswordRe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterPanel.this.keyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSingIn)
                        .addGap(18, 18, 18)
                        .addComponent(bntRegister))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(pfPasswordRe, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordReError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pfPasswordRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntRegister)
                            .addComponent(lblSingIn)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(lblPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPasswordReError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(204, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bntRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntRegisterActionPerformed
        handleInput();
    }//GEN-LAST:event_bntRegisterActionPerformed

    private void lblSingInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingInMouseEntered
        lblSingIn.setForeground(Color.ORANGE);
    }//GEN-LAST:event_lblSingInMouseEntered

    private void lblSingInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingInMouseExited
        lblSingIn.setForeground(Color.blue);
    }//GEN-LAST:event_lblSingInMouseExited

    private void lblSingInMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingInMouseReleased
       parent.setSignInPanel();
    }//GEN-LAST:event_lblSingInMouseReleased

    private void keyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            handleInput();
        }
        else{
            String componentName = evt.getComponent().getName();
             if (null != componentName) switch (componentName) {
                case "username":
                    lblUsernameError.setText(validationFields.get(0).getText().isEmpty() ? "X" : "");
                    break;
                case "password":
                    lblPasswordError.setText(validationFields.get(1).getText().isEmpty() ? "X" : "");
                    break;
                case "passwordRe":
                    lblPasswordReError.setText(validationFields.get(2).getText().isEmpty() ? "X" : "");
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_keyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblPasswordError;
    private javax.swing.JLabel lblPasswordReError;
    private javax.swing.JLabel lblSingIn;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPasswordField pfPasswordRe;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void init() {
        initValidation();
        initRepo();
    }

    private void initValidation() {
        validationFields = Arrays.asList(tfUsername, pfPassword, pfPasswordRe);
        errorLabels = Arrays.asList(lblUsernameError, lblPasswordError, lblPasswordReError);
    }

    private boolean formValid() {
        boolean ok = true;
        
        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().isEmpty();
            errorLabels.get(i).setText(validationFields.get(i).getText().isEmpty() ? "X" : "");
        }
        
        if (ok == true) {
            ok &= Arrays.equals(pfPassword.getPassword(), pfPasswordRe.getPassword());
            lblPasswordReError.setText(Arrays.equals(pfPassword.getPassword(), pfPasswordRe.getPassword()) ? "" : "X");
        }
        return ok;
    }

    private void initRepo() {
        repo = RepositoryFactory.getRepository();
    }

    private boolean registerNewUser() throws Exception {
        
        User user = new User (tfUsername.getText().trim(), pfPassword.getPassword(), UserRole.USER); 
        if (!repo.usernameExits(user.getUsername())) {
            repo.createUser(user);
            return true;
        }
        return false;
    }

    private void handleInput() {
        if(!formValid()){
            return;
        }
        
        try {
            if(registerNewUser()){
                MessageUtils.showInformationMessage("Success!", "You have been registered.");
                parent.setSignInPanel();
            }
            else MessageUtils.showInformationMessage("Username exists", "Entered username already exists.");
            
        } catch (Exception ex) {
            Logger.getLogger(PersonsPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Authentication failed", "Unable to register new user.");
        }
    }
}
